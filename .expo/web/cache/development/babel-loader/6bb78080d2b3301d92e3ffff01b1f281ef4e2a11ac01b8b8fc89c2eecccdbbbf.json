{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TabActions = void 0;\nexports.default = TabRouter;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _nonSecure = require(\"nanoid/non-secure\");\nvar _BaseRouter = _interopRequireDefault(require(\"./BaseRouter\"));\nvar TYPE_ROUTE = 'route';\nvar TabActions = {\n  jumpTo: function jumpTo(name, params) {\n    return {\n      type: 'JUMP_TO',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  }\n};\nexports.TabActions = TabActions;\nvar getRouteHistory = function getRouteHistory(routes, index, backBehavior, initialRouteName) {\n  var history = [{\n    type: TYPE_ROUTE,\n    key: routes[index].key\n  }];\n  var initialRouteIndex;\n  switch (backBehavior) {\n    case 'order':\n      for (var i = index; i > 0; i--) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[i - 1].key\n        });\n      }\n      break;\n    case 'firstRoute':\n      if (index !== 0) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[0].key\n        });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(function (route) {\n        return route.name === initialRouteName;\n      });\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n      if (index !== initialRouteIndex) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key\n        });\n      }\n      break;\n    case 'history':\n      break;\n  }\n  return history;\n};\nvar changeIndex = function changeIndex(state, index, backBehavior, initialRouteName) {\n  var history;\n  if (backBehavior === 'history') {\n    var currentKey = state.routes[index].key;\n    history = state.history.filter(function (it) {\n      return it.type === 'route' ? it.key !== currentKey : false;\n    }).concat({\n      type: TYPE_ROUTE,\n      key: currentKey\n    });\n  } else {\n    history = getRouteHistory(state.routes, index, backBehavior, initialRouteName);\n  }\n  return (0, _extends2.default)({}, state, {\n    index: index,\n    history: history\n  });\n};\nfunction TabRouter(_ref) {\n  var initialRouteName = _ref.initialRouteName,\n    _ref$backBehavior = _ref.backBehavior,\n    backBehavior = _ref$backBehavior === void 0 ? 'firstRoute' : _ref$backBehavior;\n  var router = (0, _extends2.default)({}, _BaseRouter.default, {\n    type: 'tab',\n    getInitialState: function getInitialState(_ref2) {\n      var routeNames = _ref2.routeNames,\n        routeParamList = _ref2.routeParamList;\n      var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n      var routes = routeNames.map(function (name) {\n        return {\n          name: name,\n          key: name + \"-\" + (0, _nonSecure.nanoid)(),\n          params: routeParamList[name]\n        };\n      });\n      var history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n      return {\n        stale: false,\n        type: 'tab',\n        key: \"tab-\" + (0, _nonSecure.nanoid)(),\n        index: index,\n        routeNames: routeNames,\n        history: history,\n        routes: routes\n      };\n    },\n    getRehydratedState: function getRehydratedState(partialState, _ref3) {\n      var routeNames = _ref3.routeNames,\n        routeParamList = _ref3.routeParamList;\n      var _state$routes, _state$index, _state$history$filter, _state$history;\n      var state = partialState;\n      if (state.stale === false) {\n        return state;\n      }\n      var routes = routeNames.map(function (name) {\n        var route = state.routes.find(function (r) {\n          return r.name === name;\n        });\n        return (0, _extends2.default)({}, route, {\n          name: name,\n          key: route && route.name === name && route.key ? route.key : name + \"-\" + (0, _nonSecure.nanoid)(),\n          params: routeParamList[name] !== undefined ? (0, _extends2.default)({}, routeParamList[name], route ? route.params : undefined) : route ? route.params : undefined\n        });\n      });\n      var index = Math.min(Math.max(routeNames.indexOf((_state$routes = state.routes[(_state$index = state === null || state === void 0 ? void 0 : state.index) !== null && _state$index !== void 0 ? _state$index : 0]) === null || _state$routes === void 0 ? void 0 : _state$routes.name), 0), routes.length - 1);\n      var history = (_state$history$filter = (_state$history = state.history) === null || _state$history === void 0 ? void 0 : _state$history.filter(function (it) {\n        return routes.find(function (r) {\n          return r.key === it.key;\n        });\n      })) !== null && _state$history$filter !== void 0 ? _state$history$filter : [];\n      return changeIndex({\n        stale: false,\n        type: 'tab',\n        key: \"tab-\" + (0, _nonSecure.nanoid)(),\n        index: index,\n        routeNames: routeNames,\n        history: history,\n        routes: routes\n      }, index, backBehavior, initialRouteName);\n    },\n    getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref4) {\n      var routeNames = _ref4.routeNames,\n        routeParamList = _ref4.routeParamList;\n      var routes = routeNames.map(function (name) {\n        return state.routes.find(function (r) {\n          return r.name === name;\n        }) || {\n          name: name,\n          key: name + \"-\" + (0, _nonSecure.nanoid)(),\n          params: routeParamList[name]\n        };\n      });\n      var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n      var history = state.history.filter(function (it) {\n        return it.type !== 'route' || routes.find(function (r) {\n          return r.key === it.key;\n        });\n      });\n      if (!history.length) {\n        history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n      }\n      return (0, _extends2.default)({}, state, {\n        history: history,\n        routeNames: routeNames,\n        routes: routes,\n        index: index\n      });\n    },\n    getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n      var index = state.routes.findIndex(function (r) {\n        return r.key === key;\n      });\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n    getStateForAction: function getStateForAction(state, action, _ref5) {\n      var routeParamList = _ref5.routeParamList;\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE':\n          {\n            var index = -1;\n            if (action.type === 'NAVIGATE' && action.payload.key) {\n              index = state.routes.findIndex(function (route) {\n                return route.key === action.payload.key;\n              });\n            } else {\n              index = state.routes.findIndex(function (route) {\n                return route.name === action.payload.name;\n              });\n            }\n            if (index === -1) {\n              return null;\n            }\n            return changeIndex((0, _extends2.default)({}, state, {\n              routes: state.routes.map(function (route, i) {\n                if (i !== index) {\n                  return route;\n                }\n                var params;\n                if (action.type === 'NAVIGATE' && action.payload.merge) {\n                  params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? (0, _extends2.default)({}, routeParamList[route.name], route.params, action.payload.params) : route.params;\n                } else {\n                  params = routeParamList[route.name] !== undefined ? (0, _extends2.default)({}, routeParamList[route.name], action.payload.params) : action.payload.params;\n                }\n                var path = action.type === 'NAVIGATE' && action.payload.path != null ? action.payload.path : route.path;\n                return params !== route.params || path !== route.path ? (0, _extends2.default)({}, route, {\n                  path: path,\n                  params: params\n                }) : route;\n              })\n            }), index, backBehavior, initialRouteName);\n          }\n        case 'GO_BACK':\n          {\n            if (state.history.length === 1) {\n              return null;\n            }\n            var previousKey = state.history[state.history.length - 2].key;\n            var _index = state.routes.findIndex(function (route) {\n              return route.key === previousKey;\n            });\n            if (_index === -1) {\n              return null;\n            }\n            return (0, _extends2.default)({}, state, {\n              history: state.history.slice(0, -1),\n              index: _index\n            });\n          }\n        default:\n          return _BaseRouter.default.getStateForAction(state, action);\n      }\n    },\n    shouldActionChangeFocus: function shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n    actionCreators: TabActions\n  });\n  return router;\n}","map":{"version":3,"names":["_nonSecure","require","_BaseRouter","_interopRequireDefault","TYPE_ROUTE","TabActions","jumpTo","name","params","type","payload","exports","getRouteHistory","routes","index","backBehavior","initialRouteName","history","key","initialRouteIndex","i","unshift","findIndex","route","changeIndex","state","currentKey","filter","it","concat","_extends2","default","TabRouter","_ref","_ref$backBehavior","router","BaseRouter","getInitialState","_ref2","routeNames","routeParamList","undefined","includes","indexOf","map","nanoid","stale","getRehydratedState","partialState","_ref3","_state$routes","_state$index","_state$history$filter","_state$history","find","r","Math","min","max","length","getStateForRouteNamesChange","_ref4","getStateForRouteFocus","getStateForAction","action","_ref5","merge","path","previousKey","slice","shouldActionChangeFocus","actionCreators"],"sources":["C:\\Users\\annel\\OneDrive\\Documents\\Project\\sam\\ppam\\node_modules\\@react-navigation\\routers\\lib\\module\\TabRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n} from './types';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior =\n  | 'initialRoute'\n  | 'firstRoute'\n  | 'history'\n  | 'order'\n  | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState<ParamList extends ParamListBase> = Omit<\n  NavigationState<ParamList>,\n  'history'\n> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n};\n\nexport type TabActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Jump to an existing tab.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  jumpTo<RouteName extends Extract<keyof ParamList, string>>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n  let initialRouteIndex;\n\n  switch (backBehavior) {\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'firstRoute':\n      if (index !== 0) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[0].key,\n        });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(\n        (route) => route.name === initialRouteName\n      );\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n      if (index !== initialRouteIndex) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key,\n        });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState<ParamListBase>,\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter((it) => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(\n      state.routes,\n      index,\n      backBehavior,\n      initialRouteName\n    );\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'firstRoute',\n}: TabRouterOptions) {\n  const router: Router<\n    TabNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  > = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map((name) => ({\n        name,\n        key: `${name}-${nanoid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(\n        routes,\n        index,\n        backBehavior,\n        initialRouteName\n      );\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${nanoid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map((name) => {\n        const route = (\n          state as PartialState<TabNavigationState<ParamListBase>>\n        ).routes.find((r) => r.name === name);\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${nanoid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0),\n        routes.length - 1\n      );\n\n      const history =\n        state.history?.filter((it) => routes.find((r) => r.key === it.key)) ??\n        [];\n\n      return changeIndex(\n        {\n          stale: false,\n          type: 'tab',\n          key: `tab-${nanoid()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n        },\n        index,\n        backBehavior,\n        initialRouteName\n      );\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = routeNames.map(\n        (name) =>\n          state.routes.find((r) => r.name === name) || {\n            name,\n            key: `${name}-${nanoid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        (it) => it.type !== 'route' || routes.find((r) => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(\n          routes,\n          index,\n          backBehavior,\n          initialRouteName\n        );\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n\n    getStateForAction(state, action, { routeParamList }) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              (route) => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              (route) => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes: state.routes.map((route, i) => {\n                if (i !== index) {\n                  return route;\n                }\n\n                let params;\n\n                if (action.type === 'NAVIGATE' && action.payload.merge) {\n                  params =\n                    action.payload.params !== undefined ||\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...route.params,\n                          ...action.payload.params,\n                        }\n                      : route.params;\n                } else {\n                  params =\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params;\n                }\n\n                const path =\n                  action.type === 'NAVIGATE' && action.payload.path != null\n                    ? action.payload.path\n                    : route.path;\n\n                return params !== route.params || path !== route.path\n                  ? { ...route, path, params }\n                  : route;\n              }),\n            },\n            index,\n            backBehavior,\n            initialRouteName\n          );\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2].key;\n          const index = state.routes.findIndex(\n            (route) => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}