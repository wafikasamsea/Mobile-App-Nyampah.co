{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useOnAction;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _NavigationBuilderContext = _interopRequireDefault(require(\"./NavigationBuilderContext\"));\nvar _useOnPreventRemove = _interopRequireWildcard(require(\"./useOnPreventRemove\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction useOnAction(_ref) {\n  var router = _ref.router,\n    getState = _ref.getState,\n    setState = _ref.setState,\n    key = _ref.key,\n    actionListeners = _ref.actionListeners,\n    beforeRemoveListeners = _ref.beforeRemoveListeners,\n    routerConfigOptions = _ref.routerConfigOptions,\n    emitter = _ref.emitter;\n  var _React$useContext = React.useContext(_NavigationBuilderContext.default),\n    onActionParent = _React$useContext.onAction,\n    onRouteFocusParent = _React$useContext.onRouteFocus,\n    addListenerParent = _React$useContext.addListener,\n    onDispatchAction = _React$useContext.onDispatchAction;\n  var routerConfigOptionsRef = React.useRef(routerConfigOptions);\n  React.useEffect(function () {\n    routerConfigOptionsRef.current = routerConfigOptions;\n  });\n  var onAction = React.useCallback(function (action) {\n    var visitedNavigators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n    var state = getState();\n    if (visitedNavigators.has(state.key)) {\n      return false;\n    }\n    visitedNavigators.add(state.key);\n    if (typeof action.target !== 'string' || action.target === state.key) {\n      var result = router.getStateForAction(state, action, routerConfigOptionsRef.current);\n      result = result === null && action.target === state.key ? state : result;\n      if (result !== null) {\n        onDispatchAction(action, state === result);\n        if (state !== result) {\n          var isPrevented = (0, _useOnPreventRemove.shouldPreventRemove)(emitter, beforeRemoveListeners, state.routes, result.routes, action);\n          if (isPrevented) {\n            return true;\n          }\n          setState(result);\n        }\n        if (onRouteFocusParent !== undefined) {\n          var shouldFocus = router.shouldActionChangeFocus(action);\n          if (shouldFocus && key !== undefined) {\n            onRouteFocusParent(key);\n          }\n        }\n        return true;\n      }\n    }\n    if (onActionParent !== undefined) {\n      if (onActionParent(action, visitedNavigators)) {\n        return true;\n      }\n    }\n    for (var i = actionListeners.length - 1; i >= 0; i--) {\n      var listener = actionListeners[i];\n      if (listener(action, visitedNavigators)) {\n        return true;\n      }\n    }\n    return false;\n  }, [actionListeners, beforeRemoveListeners, emitter, getState, key, onActionParent, onDispatchAction, onRouteFocusParent, router, setState]);\n  (0, _useOnPreventRemove.default)({\n    getState: getState,\n    emitter: emitter,\n    beforeRemoveListeners: beforeRemoveListeners\n  });\n  React.useEffect(function () {\n    return addListenerParent === null || addListenerParent === void 0 ? void 0 : addListenerParent('action', onAction);\n  }, [addListenerParent, onAction]);\n  return onAction;\n}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_NavigationBuilderContext","_interopRequireDefault","_useOnPreventRemove","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","useOnAction","_ref","router","getState","setState","actionListeners","beforeRemoveListeners","routerConfigOptions","emitter","_React$useContext","useContext","NavigationBuilderContext","onActionParent","onAction","onRouteFocusParent","onRouteFocus","addListenerParent","addListener","onDispatchAction","routerConfigOptionsRef","useRef","useEffect","current","useCallback","action","visitedNavigators","arguments","length","undefined","Set","state","add","target","result","getStateForAction","isPrevented","shouldPreventRemove","routes","shouldFocus","shouldActionChangeFocus","i","listener","useOnPreventRemove"],"sources":["C:\\Users\\annel\\OneDrive\\Documents\\Project\\sam\\ppam\\node_modules\\@react-navigation\\core\\lib\\module\\useOnAction.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  PartialState,\n  Router,\n  RouterConfigOptions,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  ChildActionListener,\n  ChildBeforeRemoveListener,\n} from './NavigationBuilderContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport useOnPreventRemove, { shouldPreventRemove } from './useOnPreventRemove';\n\ntype Options = {\n  router: Router<NavigationState, NavigationAction>;\n  key?: string;\n  getState: () => NavigationState;\n  setState: (state: NavigationState | PartialState<NavigationState>) => void;\n  actionListeners: ChildActionListener[];\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n  routerConfigOptions: RouterConfigOptions;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n};\n\n/**\n * Hook to handle actions for a navigator, including state updates and bubbling.\n *\n * Bubbling an action is achieved in 2 ways:\n * 1. To bubble action to parent, we expose the action handler in context and then access the parent context\n * 2. To bubble action to child, child adds event listeners subscribing to actions from parent\n *\n * When the action handler handles as action, it returns `true`, otherwise `false`.\n */\nexport default function useOnAction({\n  router,\n  getState,\n  setState,\n  key,\n  actionListeners,\n  beforeRemoveListeners,\n  routerConfigOptions,\n  emitter,\n}: Options) {\n  const {\n    onAction: onActionParent,\n    onRouteFocus: onRouteFocusParent,\n    addListener: addListenerParent,\n    onDispatchAction,\n  } = React.useContext(NavigationBuilderContext);\n\n  const routerConfigOptionsRef =\n    React.useRef<RouterConfigOptions>(routerConfigOptions);\n\n  React.useEffect(() => {\n    routerConfigOptionsRef.current = routerConfigOptions;\n  });\n\n  const onAction = React.useCallback(\n    (\n      action: NavigationAction,\n      visitedNavigators: Set<string> = new Set<string>()\n    ) => {\n      const state = getState();\n\n      // Since actions can bubble both up and down, they could come to the same navigator again\n      // We keep track of navigators which have already tried to handle the action and return if it's already visited\n      if (visitedNavigators.has(state.key)) {\n        return false;\n      }\n\n      visitedNavigators.add(state.key);\n\n      if (typeof action.target !== 'string' || action.target === state.key) {\n        let result = router.getStateForAction(\n          state,\n          action,\n          routerConfigOptionsRef.current\n        );\n\n        // If a target is specified and set to current navigator, the action shouldn't bubble\n        // So instead of `null`, we use the state object for such cases to signal that action was handled\n        result =\n          result === null && action.target === state.key ? state : result;\n\n        if (result !== null) {\n          onDispatchAction(action, state === result);\n\n          if (state !== result) {\n            const isPrevented = shouldPreventRemove(\n              emitter,\n              beforeRemoveListeners,\n              state.routes,\n              result.routes,\n              action\n            );\n\n            if (isPrevented) {\n              return true;\n            }\n\n            setState(result);\n          }\n\n          if (onRouteFocusParent !== undefined) {\n            // Some actions such as `NAVIGATE` also want to bring the navigated route to focus in the whole tree\n            // This means we need to focus all of the parent navigators of this navigator as well\n            const shouldFocus = router.shouldActionChangeFocus(action);\n\n            if (shouldFocus && key !== undefined) {\n              onRouteFocusParent(key);\n            }\n          }\n\n          return true;\n        }\n      }\n\n      if (onActionParent !== undefined) {\n        // Bubble action to the parent if the current navigator didn't handle it\n        if (onActionParent(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      // If the action wasn't handled by current navigator or a parent navigator, let children handle it\n      for (let i = actionListeners.length - 1; i >= 0; i--) {\n        const listener = actionListeners[i];\n\n        if (listener(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    [\n      actionListeners,\n      beforeRemoveListeners,\n      emitter,\n      getState,\n      key,\n      onActionParent,\n      onDispatchAction,\n      onRouteFocusParent,\n      router,\n      setState,\n    ]\n  );\n\n  useOnPreventRemove({\n    getState,\n    emitter,\n    beforeRemoveListeners,\n  });\n\n  React.useEffect(\n    () => addListenerParent?.('action', onAction),\n    [addListenerParent, onAction]\n  );\n\n  return onAction;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}