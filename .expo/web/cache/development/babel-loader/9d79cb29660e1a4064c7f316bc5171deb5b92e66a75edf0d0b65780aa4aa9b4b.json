{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultAnimatedStyles = defaultAnimatedStyles;\nexports.defaultScrollInterpolator = defaultScrollInterpolator;\nexports.getInputRangeFromIndexes = getInputRangeFromIndexes;\nexports.shiftAnimatedStyles = shiftAnimatedStyles;\nexports.stackAnimatedStyles = stackAnimatedStyles;\nexports.stackScrollInterpolator = stackScrollInterpolator;\nexports.tinderAnimatedStyles = tinderAnimatedStyles;\nexports.tinderScrollInterpolator = tinderScrollInterpolator;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _reactNative = require(\"react-native\");\nvar IS_ANDROID = _reactNative.Platform.OS === 'android';\nfunction getInputRangeFromIndexes(range, index, carouselProps) {\n  var sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n  var inputRange = [];\n  for (var i = 0; i < range.length; i++) {\n    inputRange.push((index - range[i]) * sizeRef);\n  }\n  return inputRange;\n}\nfunction defaultScrollInterpolator(index, carouselProps) {\n  var range = [1, 0, -1];\n  var inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n  var outputRange = [0, 1, 0];\n  return {\n    inputRange: inputRange,\n    outputRange: outputRange\n  };\n}\nfunction defaultAnimatedStyles(index, animatedValue, carouselProps) {\n  var animatedOpacity = {};\n  var animatedScale = {};\n  if (carouselProps.inactiveSlideOpacity < 1) {\n    animatedOpacity = {\n      opacity: animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [carouselProps.inactiveSlideOpacity, 1]\n      })\n    };\n  }\n  if (carouselProps.inactiveSlideScale < 1) {\n    animatedScale = {\n      transform: [{\n        scale: animatedValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [carouselProps.inactiveSlideScale, 1]\n        })\n      }]\n    };\n  }\n  return (0, _extends2.default)({}, animatedOpacity, animatedScale);\n}\nfunction shiftAnimatedStyles(index, animatedValue, carouselProps) {\n  var animatedOpacity = {};\n  var animatedScale = {};\n  var animatedTranslate = {};\n  if (carouselProps.inactiveSlideOpacity < 1) {\n    animatedOpacity = {\n      opacity: animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [carouselProps.inactiveSlideOpacity, 1]\n      })\n    };\n  }\n  if (carouselProps.inactiveSlideScale < 1) {\n    animatedScale = {\n      scale: animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [carouselProps.inactiveSlideScale, 1]\n      })\n    };\n  }\n  if (carouselProps.inactiveSlideShift !== 0) {\n    var translateProp = carouselProps.vertical ? 'translateX' : 'translateY';\n    animatedTranslate = (0, _defineProperty2.default)({}, translateProp, animatedValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [carouselProps.inactiveSlideShift, 0]\n    }));\n  }\n  return (0, _extends2.default)({}, animatedOpacity, {\n    transform: [(0, _extends2.default)({}, animatedScale), (0, _extends2.default)({}, animatedTranslate)]\n  });\n}\nfunction stackScrollInterpolator(index, carouselProps) {\n  var range = IS_ANDROID ? [1, 0, -1, -2, -3] : [3, 2, 1, 0, -1];\n  var inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n  var outputRange = range;\n  return {\n    inputRange: inputRange,\n    outputRange: outputRange\n  };\n}\nfunction stackAnimatedStyles(index, animatedValue, carouselProps, cardOffset) {\n  var sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n  var translateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n  var card1Scale = 0.9;\n  var card2Scale = 0.8;\n  cardOffset = !cardOffset && cardOffset !== 0 ? 18 : cardOffset;\n  var getTranslateFromScale = function getTranslateFromScale(cardIndex, scale) {\n    var centerFactor = 1 / scale * cardIndex;\n    var centeredPosition = -Math.round(sizeRef * centerFactor);\n    var edgeAlignment = Math.round((sizeRef - sizeRef * scale) / 2);\n    var offset = Math.round(cardOffset * Math.abs(cardIndex) / scale);\n    return IS_ANDROID ? centeredPosition - edgeAlignment - offset : centeredPosition + edgeAlignment + offset;\n  };\n  var opacityOutputRange = carouselProps.inactiveSlideOpacity === 1 ? [1, 1, 1, 0] : [1, 0.75, 0.5, 0];\n  return IS_ANDROID ? {\n    opacity: animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0],\n      outputRange: opacityOutputRange.reverse(),\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      scale: animatedValue.interpolate({\n        inputRange: [-2, -1, 0, 1],\n        outputRange: [card2Scale, card1Scale, 1, card1Scale],\n        extrapolate: 'clamp'\n      })\n    }, (0, _defineProperty2.default)({}, translateProp, animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0, 1],\n      outputRange: [getTranslateFromScale(-3, card2Scale), getTranslateFromScale(-2, card2Scale), getTranslateFromScale(-1, card1Scale), 0, sizeRef * 0.5],\n      extrapolate: 'clamp'\n    }))]\n  } : {\n    zIndex: carouselProps.data.length - index,\n    opacity: animatedValue.interpolate({\n      inputRange: [0, 1, 2, 3],\n      outputRange: opacityOutputRange,\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      scale: animatedValue.interpolate({\n        inputRange: [-1, 0, 1, 2],\n        outputRange: [card1Scale, 1, card1Scale, card2Scale],\n        extrapolate: 'clamp'\n      })\n    }, (0, _defineProperty2.default)({}, translateProp, animatedValue.interpolate({\n      inputRange: [-1, 0, 1, 2, 3],\n      outputRange: [-sizeRef * 0.5, 0, getTranslateFromScale(1, card1Scale), getTranslateFromScale(2, card2Scale), getTranslateFromScale(3, card2Scale)],\n      extrapolate: 'clamp'\n    }))]\n  };\n}\nfunction tinderScrollInterpolator(index, carouselProps) {\n  var range = IS_ANDROID ? [1, 0, -1, -2, -3] : [3, 2, 1, 0, -1];\n  var inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n  var outputRange = range;\n  return {\n    inputRange: inputRange,\n    outputRange: outputRange\n  };\n}\nfunction tinderAnimatedStyles(index, animatedValue, carouselProps, cardOffset) {\n  var sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n  var mainTranslateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n  var secondaryTranslateProp = carouselProps.vertical ? 'translateX' : 'translateY';\n  var card1Scale = 0.96;\n  var card2Scale = 0.92;\n  var card3Scale = 0.88;\n  var peekingCardsOpacity = IS_ANDROID ? 0.92 : 1;\n  cardOffset = !cardOffset && cardOffset !== 0 ? 9 : cardOffset;\n  var getMainTranslateFromScale = function getMainTranslateFromScale(cardIndex, scale) {\n    var centerFactor = 1 / scale * cardIndex;\n    return -Math.round(sizeRef * centerFactor);\n  };\n  var getSecondaryTranslateFromScale = function getSecondaryTranslateFromScale(cardIndex, scale) {\n    return Math.round(cardOffset * Math.abs(cardIndex) / scale);\n  };\n  return IS_ANDROID ? {\n    opacity: animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0, 1],\n      outputRange: [0, peekingCardsOpacity, peekingCardsOpacity, 1, 0],\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      scale: animatedValue.interpolate({\n        inputRange: [-3, -2, -1, 0],\n        outputRange: [card3Scale, card2Scale, card1Scale, 1],\n        extrapolate: 'clamp'\n      })\n    }, {\n      rotate: animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '22deg'],\n        extrapolate: 'clamp'\n      })\n    }, (0, _defineProperty2.default)({}, mainTranslateProp, animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0, 1],\n      outputRange: [getMainTranslateFromScale(-3, card3Scale), getMainTranslateFromScale(-2, card2Scale), getMainTranslateFromScale(-1, card1Scale), 0, sizeRef * 1.1],\n      extrapolate: 'clamp'\n    })), (0, _defineProperty2.default)({}, secondaryTranslateProp, animatedValue.interpolate({\n      inputRange: [-3, -2, -1, 0],\n      outputRange: [getSecondaryTranslateFromScale(-3, card3Scale), getSecondaryTranslateFromScale(-2, card2Scale), getSecondaryTranslateFromScale(-1, card1Scale), 0],\n      extrapolate: 'clamp'\n    }))]\n  } : {\n    zIndex: carouselProps.data.length - index,\n    opacity: animatedValue.interpolate({\n      inputRange: [-1, 0, 1, 2, 3],\n      outputRange: [0, 1, peekingCardsOpacity, peekingCardsOpacity, 0],\n      extrapolate: 'clamp'\n    }),\n    transform: [{\n      scale: animatedValue.interpolate({\n        inputRange: [0, 1, 2, 3],\n        outputRange: [1, card1Scale, card2Scale, card3Scale],\n        extrapolate: 'clamp'\n      })\n    }, {\n      rotate: animatedValue.interpolate({\n        inputRange: [-1, 0],\n        outputRange: ['-22deg', '0deg'],\n        extrapolate: 'clamp'\n      })\n    }, (0, _defineProperty2.default)({}, mainTranslateProp, animatedValue.interpolate({\n      inputRange: [-1, 0, 1, 2, 3],\n      outputRange: [-sizeRef * 1.1, 0, getMainTranslateFromScale(1, card1Scale), getMainTranslateFromScale(2, card2Scale), getMainTranslateFromScale(3, card3Scale)],\n      extrapolate: 'clamp'\n    })), (0, _defineProperty2.default)({}, secondaryTranslateProp, animatedValue.interpolate({\n      inputRange: [0, 1, 2, 3],\n      outputRange: [0, getSecondaryTranslateFromScale(1, card1Scale), getSecondaryTranslateFromScale(2, card2Scale), getSecondaryTranslateFromScale(3, card3Scale)],\n      extrapolate: 'clamp'\n    }))]\n  };\n}","map":{"version":3,"names":["_reactNative","require","IS_ANDROID","Platform","OS","getInputRangeFromIndexes","range","index","carouselProps","sizeRef","vertical","itemHeight","itemWidth","inputRange","i","length","push","defaultScrollInterpolator","outputRange","defaultAnimatedStyles","animatedValue","animatedOpacity","animatedScale","inactiveSlideOpacity","opacity","interpolate","inactiveSlideScale","transform","scale","_extends2","default","shiftAnimatedStyles","animatedTranslate","inactiveSlideShift","translateProp","_defineProperty2","stackScrollInterpolator","stackAnimatedStyles","cardOffset","card1Scale","card2Scale","getTranslateFromScale","cardIndex","centerFactor","centeredPosition","Math","round","edgeAlignment","offset","abs","opacityOutputRange","reverse","extrapolate","zIndex","data","tinderScrollInterpolator","tinderAnimatedStyles","mainTranslateProp","secondaryTranslateProp","card3Scale","peekingCardsOpacity","getMainTranslateFromScale","getSecondaryTranslateFromScale","rotate"],"sources":["C:/Users/annel/OneDrive/Documents/Project/sam/ppam/node_modules/react-native-snap-carousel/src/utils/animations.js"],"sourcesContent":["import { Platform } from 'react-native';\n\nconst IS_ANDROID = Platform.OS === 'android';\n\n// Get scroll interpolator's input range from an array of slide indexes\n// Indexes are relative to the current active slide (index 0)\n// For example, using [3, 2, 1, 0, -1] will return:\n// [\n//     (index - 3) * sizeRef, // active + 3\n//     (index - 2) * sizeRef, // active + 2\n//     (index - 1) * sizeRef, // active + 1\n//     index * sizeRef, // active\n//     (index + 1) * sizeRef // active - 1\n// ]\nexport function getInputRangeFromIndexes (range, index, carouselProps) {\n    const sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n    let inputRange = [];\n\n    for (let i = 0; i < range.length; i++) {\n        inputRange.push((index - range[i]) * sizeRef);\n    }\n\n    return inputRange;\n}\n\n// Default behavior\n// Scale and/or opacity effect\n// Based on props 'inactiveSlideOpacity' and 'inactiveSlideScale'\nexport function defaultScrollInterpolator (index, carouselProps) {\n    const range = [1, 0, -1];\n    const inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n    const outputRange = [0, 1, 0];\n\n    return { inputRange, outputRange };\n}\nexport function defaultAnimatedStyles (index, animatedValue, carouselProps) {\n    let animatedOpacity = {};\n    let animatedScale = {};\n\n    if (carouselProps.inactiveSlideOpacity < 1) {\n        animatedOpacity = {\n            opacity: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [carouselProps.inactiveSlideOpacity, 1]\n            })\n        };\n    }\n\n    if (carouselProps.inactiveSlideScale < 1) {\n        animatedScale = {\n            transform: [{\n                scale: animatedValue.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [carouselProps.inactiveSlideScale, 1]\n                })\n            }]\n        };\n    }\n\n    return {\n        ...animatedOpacity,\n        ...animatedScale\n    };\n}\n\n// Shift animation\n// Same as the default one, but the active slide is also shifted up or down\n// Based on prop 'inactiveSlideShift'\nexport function shiftAnimatedStyles (index, animatedValue, carouselProps) {\n    let animatedOpacity = {};\n    let animatedScale = {};\n    let animatedTranslate = {};\n\n    if (carouselProps.inactiveSlideOpacity < 1) {\n        animatedOpacity = {\n            opacity: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [carouselProps.inactiveSlideOpacity, 1]\n            })\n        };\n    }\n\n    if (carouselProps.inactiveSlideScale < 1) {\n        animatedScale = {\n            scale: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [carouselProps.inactiveSlideScale, 1]\n            })\n        };\n    }\n\n    if (carouselProps.inactiveSlideShift !== 0) {\n        const translateProp = carouselProps.vertical ? 'translateX' : 'translateY';\n        animatedTranslate = {\n            [translateProp]: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [carouselProps.inactiveSlideShift, 0]\n            })\n        };\n    }\n\n    return {\n        ...animatedOpacity,\n        transform: [\n            { ...animatedScale },\n            { ...animatedTranslate }\n        ]\n    };\n}\n\n// Stack animation\n// Imitate a deck/stack of cards (see #195)\n// WARNING: The effect had to be visually inverted on Android because this OS doesn't honor the `zIndex`property\n// This means that the item with the higher zIndex (and therefore the tap receiver) remains the one AFTER the currently active item\n// The `elevation` property compensates for that only visually, which is not good enough\nexport function stackScrollInterpolator (index, carouselProps) {\n    const range = IS_ANDROID ?\n        [1, 0, -1, -2, -3] :\n        [3, 2, 1, 0, -1];\n    const inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n    const outputRange = range;\n\n    return { inputRange, outputRange };\n}\nexport function stackAnimatedStyles (index, animatedValue, carouselProps, cardOffset) {\n    const sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n    const translateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n\n    const card1Scale = 0.9;\n    const card2Scale = 0.8;\n\n    cardOffset = !cardOffset && cardOffset !== 0 ? 18 : cardOffset;\n\n    const getTranslateFromScale = (cardIndex, scale) => {\n        const centerFactor = 1 / scale * cardIndex;\n        const centeredPosition = -Math.round(sizeRef * centerFactor);\n        const edgeAlignment = Math.round((sizeRef - (sizeRef * scale)) / 2);\n        const offset = Math.round(cardOffset * Math.abs(cardIndex) / scale);\n\n        return IS_ANDROID ?\n            centeredPosition - edgeAlignment - offset :\n            centeredPosition + edgeAlignment + offset;\n    };\n\n    const opacityOutputRange = carouselProps.inactiveSlideOpacity === 1 ? [1, 1, 1, 0] : [1, 0.75, 0.5, 0];\n\n    return IS_ANDROID ? {\n        // elevation: carouselProps.data.length - index, // fix zIndex bug visually, but not from a logic point of view\n        opacity: animatedValue.interpolate({\n            inputRange: [-3, -2, -1, 0],\n            outputRange: opacityOutputRange.reverse(),\n            extrapolate: 'clamp'\n        }),\n        transform: [{\n            scale: animatedValue.interpolate({\n                inputRange: [-2, -1, 0, 1],\n                outputRange: [card2Scale, card1Scale, 1, card1Scale],\n                extrapolate: 'clamp'\n            })\n        }, {\n            [translateProp]: animatedValue.interpolate({\n                inputRange: [-3, -2, -1, 0, 1],\n                outputRange: [\n                    getTranslateFromScale(-3, card2Scale),\n                    getTranslateFromScale(-2, card2Scale),\n                    getTranslateFromScale(-1, card1Scale),\n                    0,\n                    sizeRef * 0.5\n                ],\n                extrapolate: 'clamp'\n            })\n        }]\n    } : {\n        zIndex: carouselProps.data.length - index,\n        opacity: animatedValue.interpolate({\n            inputRange: [0, 1, 2, 3],\n            outputRange: opacityOutputRange,\n            extrapolate: 'clamp'\n        }),\n        transform: [{\n            scale: animatedValue.interpolate({\n                inputRange: [-1, 0, 1, 2],\n                outputRange: [card1Scale, 1, card1Scale, card2Scale],\n                extrapolate: 'clamp'\n            })\n        }, {\n            [translateProp]: animatedValue.interpolate({\n                inputRange: [-1, 0, 1, 2, 3],\n                outputRange: [\n                    -sizeRef * 0.5,\n                    0,\n                    getTranslateFromScale(1, card1Scale),\n                    getTranslateFromScale(2, card2Scale),\n                    getTranslateFromScale(3, card2Scale)\n                ],\n                extrapolate: 'clamp'\n            })\n        }]\n    };\n}\n\n// Tinder animation\n// Imitate the popular Tinder layout\n// WARNING: The effect had to be visually inverted on Android because this OS doesn't honor the `zIndex`property\n// This means that the item with the higher zIndex (and therefore the tap receiver) remains the one AFTER the currently active item\n// The `elevation` property compensates for that only visually, which is not good enough\nexport function tinderScrollInterpolator (index, carouselProps) {\n    const range = IS_ANDROID ?\n        [1, 0, -1, -2, -3] :\n        [3, 2, 1, 0, -1];\n    const inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n    const outputRange = range;\n\n    return { inputRange, outputRange };\n}\nexport function tinderAnimatedStyles (index, animatedValue, carouselProps, cardOffset) {\n    const sizeRef = carouselProps.vertical ? carouselProps.itemHeight : carouselProps.itemWidth;\n    const mainTranslateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n    const secondaryTranslateProp = carouselProps.vertical ? 'translateX' : 'translateY';\n\n    const card1Scale = 0.96;\n    const card2Scale = 0.92;\n    const card3Scale = 0.88;\n\n    const peekingCardsOpacity = IS_ANDROID ? 0.92 : 1;\n\n    cardOffset = !cardOffset && cardOffset !== 0 ? 9 : cardOffset;\n\n    const getMainTranslateFromScale = (cardIndex, scale) => {\n        const centerFactor = 1 / scale * cardIndex;\n        return -Math.round(sizeRef * centerFactor);\n    };\n\n    const getSecondaryTranslateFromScale = (cardIndex, scale) => {\n        return Math.round(cardOffset * Math.abs(cardIndex) / scale);\n    };\n\n    return IS_ANDROID ? {\n        // elevation: carouselProps.data.length - index, // fix zIndex bug visually, but not from a logic point of view\n        opacity: animatedValue.interpolate({\n            inputRange: [-3, -2, -1, 0, 1],\n            outputRange: [0, peekingCardsOpacity, peekingCardsOpacity, 1, 0],\n            extrapolate: 'clamp'\n        }),\n        transform: [{\n            scale: animatedValue.interpolate({\n                inputRange: [-3, -2, -1, 0],\n                outputRange: [card3Scale, card2Scale, card1Scale, 1],\n                extrapolate: 'clamp'\n            })\n        }, {\n            rotate: animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: ['0deg', '22deg'],\n                extrapolate: 'clamp'\n            })\n        }, {\n            [mainTranslateProp]: animatedValue.interpolate({\n                inputRange: [-3, -2, -1, 0, 1],\n                outputRange: [\n                    getMainTranslateFromScale(-3, card3Scale),\n                    getMainTranslateFromScale(-2, card2Scale),\n                    getMainTranslateFromScale(-1, card1Scale),\n                    0,\n                    sizeRef * 1.1\n                ],\n                extrapolate: 'clamp'\n            })\n        }, {\n            [secondaryTranslateProp]: animatedValue.interpolate({\n                inputRange: [-3, -2, -1, 0],\n                outputRange: [\n                    getSecondaryTranslateFromScale(-3, card3Scale),\n                    getSecondaryTranslateFromScale(-2, card2Scale),\n                    getSecondaryTranslateFromScale(-1, card1Scale),\n                    0\n                ],\n                extrapolate: 'clamp'\n            })\n        }]\n    } : {\n        zIndex: carouselProps.data.length - index,\n        opacity: animatedValue.interpolate({\n            inputRange: [-1, 0, 1, 2, 3],\n            outputRange: [0, 1, peekingCardsOpacity, peekingCardsOpacity, 0],\n            extrapolate: 'clamp'\n        }),\n        transform: [{\n            scale: animatedValue.interpolate({\n                inputRange: [0, 1, 2, 3],\n                outputRange: [1, card1Scale, card2Scale, card3Scale],\n                extrapolate: 'clamp'\n            })\n        }, {\n            rotate: animatedValue.interpolate({\n                inputRange: [-1, 0],\n                outputRange: ['-22deg', '0deg'],\n                extrapolate: 'clamp'\n            })\n        }, {\n            [mainTranslateProp]: animatedValue.interpolate({\n                inputRange: [-1, 0, 1, 2, 3],\n                outputRange: [\n                    -sizeRef * 1.1,\n                    0,\n                    getMainTranslateFromScale(1, card1Scale),\n                    getMainTranslateFromScale(2, card2Scale),\n                    getMainTranslateFromScale(3, card3Scale)\n                ],\n                extrapolate: 'clamp'\n            })\n        }, {\n            [secondaryTranslateProp]: animatedValue.interpolate({\n                inputRange: [0, 1, 2, 3],\n                outputRange: [\n                    0,\n                    getSecondaryTranslateFromScale(1, card1Scale),\n                    getSecondaryTranslateFromScale(2, card2Scale),\n                    getSecondaryTranslateFromScale(3, card3Scale)\n                ],\n                extrapolate: 'clamp'\n            })\n        }]\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}